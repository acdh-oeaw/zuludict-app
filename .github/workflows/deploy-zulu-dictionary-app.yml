name: Deploy zuludict-app
env:
  DOCKER_TAG: ghcr.io/acdh-oeaw/zuludict-app
  APP_NAME: zuludict-app
  APP_ROOT: "/zuludict"
  SERVICE_ID: "99999"
  PUBLIC_URL: https://zuludict.acdh.oeaw.ac.at
on:
  workflow_call:
    secrets:
      ACDH_KUBE_CONFIG:
        description: 'The kubctl config file to access the ACDH kubernetes'
        required: true
  workflow_dispatch: {}
  repository_dispatch:
    types: [run]
jobs:
  deployment:
    runs-on: 'ubuntu-latest'
    steps:
    - uses: actions/checkout@v1
      name: Checkout
    - name: Kubernetes credentials
      run: |
        mkdir ${HOME}/.kube
        echo ${{ secrets.ACDH_KUBE_CONFIG }} | base64 --decode > ${HOME}/.kube/config
        kubectl config set-context --current --namespace=${{ env.APP_NAME }}
    - name: Create auto-deploy-app-values.yaml
      run: |
        cat > auto-deploy-app-values.yaml <<EOF
        replicaCount: 1
        image:
          repository: ${{ env.DOCKER_TAG }}
          tag: ${{ github.ref_name }}
          pullPolicy: Always
        extraLabels:
          "ID": ${{ env.SERVICE_ID }}
        gitlab:
          app: ${{ env.APP_NAME }}
          envURL: ${{ github.repositoryUrl }}
        service:
          enabled: true
          name: ${{ env.APP_NAME }}
          url: ${{ env.PUBLIC_URL }}
          additionalHosts:
            - ${{ env.APP_NAME }}.acdh-cluster.arz.oeaw.ac.at
          type: ClusterIP
          externalPort: 5000
          internalPort: 5000
        ingress:
          enabled: true
          path: "/"
          annotations:
            kubernetes.io/ingress.class: "nginx"
            nginx.ingress.kubernetes.io/app-root: ${{ env.APP_ROOT }}/
        livenessProbe:
          path: "${{ env.APP_ROOT }}/index.html"
          initialDelaySeconds: 15
          timeoutSeconds: 15
          scheme: "HTTP"
          probeType: "httpGet"
        readinessProbe:
          path: "${{ env.APP_ROOT }}/index.html"
          initialDelaySeconds: 5
          timeoutSeconds: 3
          scheme: "HTTP"
          probeType: "httpGet"
        EOF
    - name: Deploy using helm and the local helm chart
      run: |
        helm upgrade zuludict-app .github/auto-deplay-app --values auto-deploy-app-values.yaml --install --atomic